(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{716:function(t,e,a){"use strict";a.r(e);var i=a(1),o=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"introduction-to-solidity-0-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction-to-solidity-0-8"}},[t._v("#")]),t._v(" Introduction to Solidity++ 0.8")]),t._v(" "),a("p",[t._v("The design goal of Solidity++ 0.8 is to be compatible with the syntax of Solidity as much as possible, so that developers donâ€™t have to learn different languages to implement the same thing.")]),t._v(" "),a("p",[t._v("We assume that you are already familiar with Solidity, if not, please read "),a("a",{attrs:{href:"https://docs.soliditylang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Solidity documentation"),a("OutboundLink")],1),t._v(" before starting.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Notice")]),t._v(" "),a("p",[t._v("The Solidity++ 0.8 is still under development, you can try a nightly build version for development or test, but do "),a("strong",[t._v("NOT")]),t._v(" deploy contracts to the mainnet until a stable version is released. Please report an issue "),a("a",{attrs:{href:"https://github.com/vitelabs/soliditypp/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(" if you find a bug.")])]),t._v(" "),a("h2",{attrs:{id:"get-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-started"}},[t._v("#")]),t._v(" Get Started")]),t._v(" "),a("p",[t._v("Let us begin with a basic example that sets the value of a variable and exposes it for frontend to access.")]),t._v(" "),a("h3",{attrs:{id:"hello-world-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hello-world-example"}},[t._v("#")]),t._v(" Hello World Example")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0zLjAKcHJhZ21hIHNvbGlkaXR5cHAgJmd0Oz0wLjguMCAmbHQ7MC45LjA7Cgpjb250cmFjdCBTaW1wbGVTdG9yYWdlIHsKICAgIHVpbnQgc3RvcmVkRGF0YTsKCiAgICBmdW5jdGlvbiBzZXQodWludCB4KSBleHRlcm5hbCBhc3luYyB7CiAgICAgICAgc3RvcmVkRGF0YSA9IHg7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0KCkgb2ZmY2hhaW4gdmlldyByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIHN0b3JlZERhdGE7CiAgICB9Cn0K"}}),t._v(" "),a("p",[t._v("As above, the way of declaring a contract is syntactically similar to Solidity.")]),t._v(" "),a("p",[t._v("The first line tells you that the source code is licensed under the GPL version 3.0.")]),t._v(" "),a("p",[t._v("The next line specifies that the source code is written for Solidity++ version 0.8.0, or a newer version of the language up to, but not including version 0.9.0. This is to ensure that the contract is not compilable with a new (breaking) compiler version, where it could behave differently.\nThe only difference with Solidity is to replace "),a("code",[t._v("solidity")]),t._v(" with "),a("code",[t._v("soliditypp")]),t._v(".")]),t._v(" "),a("p",[t._v("There are two interface functions in the "),a("strong",[t._v("SimpleStorage")]),t._v(" contract. The difference with Solidity is that the function "),a("code",[t._v("set")]),t._v(" is declared as "),a("code",[t._v("async")]),t._v(" and the function "),a("code",[t._v("get")]),t._v(" is declared as "),a("code",[t._v("offchain")]),t._v(".")]),t._v(" "),a("p",[t._v("An "),a("em",[t._v("async function")]),t._v(" does not execute or return result in the request transaction but in a subsequent response transaction.")]),t._v(" "),a("p",[t._v("An "),a("em",[t._v("offchain function")]),t._v(" is used to retrieve data of a contract from a frontend. The codes of offchain functions are not stored in the blockchain ledger but in an off-chain frontend. The frontend must pass the compiled binary code along with the parameters each time it is called.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Notice")]),t._v(" "),a("p",[t._v("An offchain function can "),a("strong",[t._v("NOT")]),t._v(" be called in a contract.")])]),t._v(" "),a("h2",{attrs:{id:"solidity-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solidity-compatibility"}},[t._v("#")]),t._v(" Solidity Compatibility")]),t._v(" "),a("p",[t._v("Solidity++ 0.8 is compatible with almost all syntax of Solidity 0.8.0 except for the differences mentioned in this article.")]),t._v(" "),a("p",[t._v("All features related to Ethereum are replaced with that related to Vite.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("new")]),t._v(" keyword is disabled in this version. In other words, it is impossible to deploy a new contract from a contract at runtime.")]),t._v(" "),a("p",[t._v("In addition, "),a("code",[t._v("delegatecall")]),t._v(", "),a("code",[t._v("selfdestruct")]),t._v(" and "),a("code",[t._v("ecrecover")]),t._v(" are disabled in this version.")]),t._v(" "),a("h2",{attrs:{id:"modifiers-for-functions-and-state-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modifiers-for-functions-and-state-variables"}},[t._v("#")]),t._v(" Modifiers for Functions and State Variables")]),t._v(" "),a("p",[t._v("Modifiers can be used to declare the behaviour of functions and state variables. Both Solidity and Solidity++ have a set of built-in language-level modifiers, and also support user-defined modifiers.")]),t._v(" "),a("h3",{attrs:{id:"modifiers-in-solidity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modifiers-in-solidity"}},[t._v("#")]),t._v(" Modifiers in Solidity")]),t._v(" "),a("p",[t._v("The built-in modifiers in Solidity can be divided into two categaries: "),a("strong",[t._v("Visibility")]),t._v(" and "),a("strong",[t._v("State Mutability")]),t._v(".")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Visibility")]),t._v(" defines the rules of how we access functions and state variables from different scopes.")]),t._v(" "),a("li",[a("strong",[t._v("State Mutability")]),t._v(" defines the rules of how a function can mutate the EVM state.")])]),t._v(" "),a("p",[t._v("Valid values of "),a("strong",[t._v("Visibility")]),t._v(" and "),a("strong",[t._v("State Mutability")]),t._v(" in Solidity are shown in the following table:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Visibility")]),t._v(" "),a("th",[t._v("State Mutability")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",[t._v("pure")])]),t._v(" "),a("tr",[a("td",[t._v("external")]),t._v(" "),a("td",[t._v("view")])]),t._v(" "),a("tr",[a("td",[t._v("internal")]),t._v(" "),a("td",[t._v("payable")])]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("nopayable")])])])]),t._v(" "),a("h3",{attrs:{id:"modifiers-in-solidity-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modifiers-in-solidity-2"}},[t._v("#")]),t._v(" Modifiers in Solidity++")]),t._v(" "),a("p",[t._v("In Solidity++, an additional value "),a("code",[t._v("offchain")]),t._v(" is added to "),a("strong",[t._v("Visibility")]),t._v(" category.")]),t._v(" "),a("p",[t._v("In addition, a new category "),a("strong",[t._v("Execution Behavior")]),t._v(" is added.")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Execution Behavior")]),t._v(" defines how a function will be executed in Vite VM, in a synchronous or asynchronous manner.")])]),t._v(" "),a("p",[t._v("Valid values of "),a("strong",[t._v("Visibility")]),t._v(", "),a("strong",[t._v("State Mutability")]),t._v(" and "),a("strong",[t._v("Execution Behavior")]),t._v(" in Solidity++ are shown in the following table:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Visibility")]),t._v(" "),a("th",[t._v("State Mutability")]),t._v(" "),a("th",[t._v("Execution Behavior")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",[t._v("pure")]),t._v(" "),a("td",[t._v("sync")])]),t._v(" "),a("tr",[a("td",[t._v("external")]),t._v(" "),a("td",[t._v("view")]),t._v(" "),a("td",[t._v("async")])]),t._v(" "),a("tr",[a("td",[t._v("internal")]),t._v(" "),a("td",[t._v("payable")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("nopayable")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("offchain")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h2",{attrs:{id:"visibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visibility"}},[t._v("#")]),t._v(" Visibility")]),t._v(" "),a("p",[t._v("There are four types of visibility for functions and state variables in Solidity: "),a("code",[t._v("external")]),t._v(", "),a("code",[t._v("public")]),t._v(", "),a("code",[t._v("internal")]),t._v(" or "),a("code",[t._v("private")]),t._v(".")]),t._v(" "),a("p",[t._v("An additional function visibility "),a("code",[t._v("offchain")]),t._v(" is added in Solidity++. It means that those functions can only be accessed offchain. That is to say, they can only be called through a frontend, but not in another contract.")]),t._v(" "),a("p",[t._v("In Solidity, functions have to be specified as being "),a("code",[t._v("public")]),t._v(", "),a("code",[t._v("external")]),t._v(", "),a("code",[t._v("internal")]),t._v(" or "),a("code",[t._v("private")]),t._v(". For state variables, "),a("code",[t._v("external")]),t._v(" is not possible.")]),t._v(" "),a("p",[t._v("In Solidity++, functions have to be specified as being "),a("code",[t._v("external")]),t._v(", "),a("code",[t._v("internal")]),t._v(", "),a("code",[t._v("private")]),t._v(" or "),a("code",[t._v("offchain")]),t._v(", "),a("code",[t._v("public")]),t._v(" is not possible. For state variables, "),a("code",[t._v("external")]),t._v(" or "),a("code",[t._v("offchain")]),t._v(" is not possible.")]),t._v(" "),a("p",[t._v("The valid types of visibility for functions and state variables in Solidity and Solidity++ are shown in the following table:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("function in Solidity")]),t._v(" "),a("th",[t._v("variable in Solidity")]),t._v(" "),a("th",[t._v("function in Solidity++")]),t._v(" "),a("th",[t._v("variable in Solidity++")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("Possible")])]),t._v(" "),a("tr",[a("td",[t._v("external")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("internal")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("Possible")])]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("Possible")])]),t._v(" "),a("tr",[a("td",[t._v("offchain")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("Possible")]),t._v(" "),a("td",[t._v("-")])])])]),t._v(" "),a("p",[t._v("In general, offchain functions have the following characteristics:")]),t._v(" "),a("ul",[a("li",[t._v("As a "),a("em",[t._v("readonly")]),t._v(" function, it is only used to retrieve the state but cannot modify it, so it should be declared as "),a("code",[t._v("view")]),t._v(" state mutability.")]),t._v(" "),a("li",[t._v("The compiled binary code of offchain functions is not stored on-chain, so it is not allowed to access transaction related information, such as "),a("code",[t._v("msg.amount")]),t._v(" or "),a("code",[t._v("msg.tokenid")]),t._v(" in an offchain function.")]),t._v(" "),a("li",[t._v("It is not allowed to call an external function in an offchain function.")]),t._v(" "),a("li",[t._v("The "),a("code",[t._v("require")]),t._v(" or "),a("code",[t._v("revert")]),t._v(" function cannot be called in an offchain function.")])]),t._v(" "),a("h2",{attrs:{id:"asynchronous-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asynchronous-functions"}},[t._v("#")]),t._v(" Asynchronous Functions")]),t._v(" "),a("p",[t._v("Solidity++ knows two kinds of function calls, asynchronous ones is not blocked while waiting for the called function to finish and synchonous ones do.")]),t._v(" "),a("p",[t._v("An asynchronous function is declared with the "),a("code",[t._v("async")]),t._v(" keyword. It can be called by the other contract, both in synchronous and asynchronous functions.")]),t._v(" "),a("p",[t._v("Although it can have return values, the caller cannot get the return value immediately after the call, unless the "),a("code",[t._v("await")]),t._v(" keyword is used.")]),t._v(" "),a("p",[t._v("The following code shows how a contract call another contract:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0zLjAKcHJhZ21hIHNvbGlkaXR5cHAgJmd0Oz0wLjguMCAmbHQ7MC45LjA7Cgpjb250cmFjdCBBIHsKICAgIHVpbnQgcHVibGljIGRhdGE7CgogICAgZnVuY3Rpb24gc2V0KHVpbnQgYSkgZXh0ZXJuYWwgYXN5bmMgewogICAgICAgIGRhdGEgPSBhOwogICAgfQp9Cgpjb250cmFjdCBCIHsKICAgIEEgYTsKICAgIGV2ZW50IExvZ01lc3NhZ2Uoc3RyaW5nIHMpOwogICAgCiAgICBjb25zdHJ1Y3RvciAoYWRkcmVzcyBwYXlhYmxlIGFkZHIpIHsKICAgICAgICBhID0gQShhZGRyKTsKICAgIH0KCiAgICBmdW5jdGlvbiBmKHVpbnQgZGF0YSkgZXh0ZXJuYWwgYXN5bmMgewogICAgICAgIC8vIGNhbGwgZnVuY3Rpb24gc2V0KCkgb2YgY29udHJhY3QgQQogICAgICAgIGEuc2V0KGRhdGEgKiAyKTsKICAgICAgICAvLyBkbyBhbnl0aGluZyBhZnRlciBjYWxsaW5nIGEuc2V0KCksIHRoZSBjb2RlIHdpbGwgbm90IGJlIGJsb2NrZWQgaGVyZQogICAgICAgIGVtaXQgTG9nTWVzc2FnZSgmcXVvdDthLnNldCgpIGlzIGNhbGxlZCZxdW90Oyk7CiAgICB9Cn0K"}}),t._v(" "),a("p",[t._v("When the "),a("code",[t._v("a.set(data * 2)")]),t._v(" statement is executed successfully, a Vite "),a("em",[t._v("request transaction")]),t._v(" is initiated. The code of the function "),a("code",[t._v("set")]),t._v(" is not executed at this moment, but executed when the corresponding "),a("em",[t._v("response transaction")]),t._v(" is initiated.")]),t._v(" "),a("p",[t._v("In general, asynchronous functions have the following characteristics:")]),t._v(" "),a("ul",[a("li",[t._v("The interface functions of a contract must be declared as "),a("code",[t._v("external async")]),t._v(".")]),t._v(" "),a("li",[t._v("The "),a("code",[t._v("public")]),t._v(" functions of a contract are no longer supported in Solidity++.")]),t._v(" "),a("li",[t._v("The "),a("code",[t._v("internal")]),t._v(" or "),a("code",[t._v("private")]),t._v(" functions of a contract must be synchronous.")])]),t._v(" "),a("h2",{attrs:{id:"await-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#await-operator"}},[t._v("#")]),t._v(" Await Operator")]),t._v(" "),a("p",[t._v("To get the return value of the asynchronous function, you need to add the "),a("code",[t._v("await")]),t._v(" operator before a function call.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("await")]),t._v(" operator is used to wait for an asynchronous function to return.")]),t._v(" "),a("p",[t._v("The following code shows the usage of "),a("code",[t._v("await")]),t._v(":")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0zLjAKcHJhZ21hIHNvbGlkaXR5cHAgJmd0Oz0wLjguMCAmbHQ7MC45LjA7Cgpjb250cmFjdCBBIHsKICAgIHVpbnQgcHVibGljIGRhdGE7CgogICAgZnVuY3Rpb24gc2V0KHVpbnQgYSkgZXh0ZXJuYWwgYXN5bmMgewogICAgICAgIGRhdGEgPSBhOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldCgpIGV4dGVybmFsIGFzeW5jIHJldHVybnMgKHVpbnQpIHsKICAgICAgICByZXR1cm4gZGF0YTsKICAgIH0KfQoKY29udHJhY3QgQiB7CiAgICBBIGE7CiAgICBldmVudCBMb2dNZXNzYWdlKHN0cmluZyBzLCB1aW50IGQpOwogICAgCiAgICBjb25zdHJ1Y3RvciAoYWRkcmVzcyBwYXlhYmxlIGFkZHIpIHsKICAgICAgICBhID0gQShhZGRyKTsKICAgIH0KCiAgICBmdW5jdGlvbiBmKHVpbnQgZGF0YSkgZXh0ZXJuYWwgYXN5bmMgewogICAgICAgIC8vIGNhbGwgZnVuY3Rpb24gc2V0KCkgb2YgY29udHJhY3QgQQogICAgICAgIGF3YWl0IGEuc2V0KGRhdGEgKiAyKTsKICAgICAgICAvLyB0aGUgY29kZSB3aWxsIGJlIGJsb2NrZWQgaGVyZSB1dGlsIGEuc2V0KCkgcmV0dXJucwogICAgICAgIGVtaXQgTG9nTWVzc2FnZSgmcXVvdDthLnNldCgpIGlzIGNhbGxlZCZxdW90OywgZGF0YSk7CiAgICAgICAgLy8gY2FsbCBmdW5jdGlvbiBnZXQoKSBvZiBjb250cmFjdCBBCiAgICAgICAgdWludCByZXN1bHQgPSBhd2FpdCBhLmdldCgpOwogICAgICAgIC8vIHRoZSBjb2RlIHdpbGwgYmUgYmxvY2tlZCBoZXJlIHV0aWwgYS5nZXQoKSByZXR1cm5zCiAgICAgICAgZW1pdCBMb2dNZXNzYWdlKCZxdW90O2EuZ2V0KCkgaXMgY2FsbGVkJnF1b3Q7LCByZXN1bHQpOwogICAgfQp9Cg=="}}),t._v(" "),a("p",[t._v("When the "),a("code",[t._v("await a.get()")]),t._v(" statement is executed, the contract B stops after initiating a Vite "),a("em",[t._v("request transaction")]),t._v(". When the corresponding "),a("em",[t._v("response transaction")]),t._v(" is initiated, the code of the function "),a("code",[t._v("get")]),t._v(" is executed and a "),a("em",[t._v("request transaction")]),t._v(" from A is initiated to send return data back to B.")]),t._v(" "),a("p",[t._v("The Solidity++ compiler generates callback function entries for each await expression. When contract B discovers the returned "),a("em",[t._v("request transaction")]),t._v(" from A, it will unpack the "),a("em",[t._v("calldata")]),t._v(" to parse the return arguments and the callback "),a("em",[t._v("function selector")]),t._v(" (4-bytes hash), then jump into the code after the await expression. At this time, the return data of "),a("code",[t._v("a.get()")]),t._v(" is ready for the following assignment statement, and the rest of the function code can be executed.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Notice")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("await")]),t._v(" operator is only valid in an asynchronous function.")])]),t._v(" "),a("h2",{attrs:{id:"getter-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getter-functions"}},[t._v("#")]),t._v(" Getter Functions")]),t._v(" "),a("p",[t._v("Same as Solidity, the Solidity++ compiler automatically creates getter functions for all public state variables.")]),t._v(" "),a("p",[t._v("For the contract given below, the compiler will generate a function called "),a("code",[t._v("data")]),t._v(" that does not take any arguments and returns a "),a("code",[t._v("uint")]),t._v(", the value of the state variable "),a("code",[t._v("data")]),t._v(".")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0zLjAKcHJhZ21hIHNvbGlkaXR5cHAgJmd0Oz0wLjguMCAmbHQ7MC45LjA7Cgpjb250cmFjdCBDIHsKICAgIHVpbnQgcHVibGljIGRhdGEgPSA0MjsKCiAgICAvLyBHZXR0ZXIgZnVuY3Rpb24gZ2VuZXJhdGVkIGJ5IHRoZSBjb21waWxlcgogICAgLyogCiAgICBmdW5jdGlvbiBkYXRhKCkgb2ZmY2hhaW4gdmlldyByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIGRhdGE7CiAgICB9CiAgICAqLwp9Cg=="}}),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Notice")]),t._v(" "),a("p",[t._v("The auto-generated getter functions have "),a("code",[t._v("offchain")]),t._v(" visibility. It can "),a("strong",[t._v("NOT")]),t._v(" be called in a contract.")])]),t._v(" "),a("p",[t._v("If you have a public state variable of array type, then you can only retrieve single elements of the array via the auto-generated getter function. You can use arguments to specify which individual element to return, for example "),a("code",[t._v("myArray(0)")]),t._v(".")]),t._v(" "),a("p",[t._v("If you want to return an entire array in one call, then you need to write a custom offchain function, for example:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0zLjAKcHJhZ21hIHNvbGlkaXR5cHAgJmd0Oz0wLjguMCAmbHQ7MC45LjA7Cgpjb250cmFjdCBhcnJheUV4YW1wbGUgewogICAgLy8gcHVibGljIHN0YXRlIHZhcmlhYmxlCiAgICB1aW50W10gcHVibGljIG15QXJyYXk7CgogICAgLy8gR2V0dGVyIGZ1bmN0aW9uIGdlbmVyYXRlZCBieSB0aGUgY29tcGlsZXIKICAgIC8qCiAgICBmdW5jdGlvbiBteUFycmF5KHVpbnQgaSkgb2ZmY2hhaW4gdmlldyByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIG15QXJyYXlbaV07CiAgICB9CiAgICAqLwoKICAgIC8vIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBlbnRpcmUgYXJyYXkKICAgIGZ1bmN0aW9uIGdldEFycmF5KCkgb2ZmY2hhaW4gdmlldyByZXR1cm5zICh1aW50W10gbWVtb3J5KSB7CiAgICAgICAgcmV0dXJuIG15QXJyYXk7CiAgICB9Cn0K"}}),t._v(" "),a("p",[t._v("Now you can use getArray() to retrieve the entire array, instead of myArray(i), which returns a single element per call.")]),t._v(" "),a("h2",{attrs:{id:"call-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call-options"}},[t._v("#")]),t._v(" Call Options")]),t._v(" "),a("p",[t._v("When calling functions of other contracts, you can specify the amount of a specific token sent with the call with the call options "),a("code",[t._v('{token: "tti_564954455820434f494e69b5", amount: 1e18}')]),t._v(".")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0zLjAKcHJhZ21hIHNvbGlkaXR5cHAgJmd0Oz0wLjguMCAmbHQ7MC45LjA7Cgpjb250cmFjdCBJbmZvRmVlZCB7CiAgICBmdW5jdGlvbiBpbmZvKCkgZXh0ZXJuYWwgYXN5bmMgcGF5YWJsZSByZXR1cm5zICh1aW50IHJldCkgewogICAgICAgIHJldHVybiA0MjsKICAgIH0KfQoKY29udHJhY3QgQ29uc3VtZXIgewogICAgSW5mb0ZlZWQgZmVlZDsKCiAgICBjb25zdHJ1Y3RvciBwYXlhYmxlIChhZGRyZXNzIHBheWFibGUgYWRkcikgewogICAgICAgIGZlZWQgPSBJbmZvRmVlZChhZGRyKTsKICAgIH0KCiAgICBmdW5jdGlvbiBjYWxsRmVlZCgpIGV4dGVybmFsIGFzeW5jIHsKICAgICAgICAvLyBzZW5kIDEgVlggd2l0aCB0aGUgY2FsbAogICAgICAgIGZlZWQuaW5mb3t0b2tlbjogJnF1b3Q7dHRpXzU2NDk1NDQ1NTgyMDQzNGY0OTRlNjliNSZxdW90OywgYW1vdW50OiAxZTE4fSgpOwogICAgfQp9Cg=="}}),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Notice")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("gas")]),t._v(","),a("code",[t._v("salt")]),t._v(" and "),a("code",[t._v("value")]),t._v(" keys in a call option are not supported in Solidity++.")])]),t._v(" "),a("h2",{attrs:{id:"units-and-globally-available-variables-in-solidity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#units-and-globally-available-variables-in-solidity"}},[t._v("#")]),t._v(" Units and Globally Available Variables in Solidity++")]),t._v(" "),a("h3",{attrs:{id:"vite-units"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vite-units"}},[t._v("#")]),t._v(" VITE Units")]),t._v(" "),a("p",[t._v("In Solidity, a literal number can take a suffix of "),a("code",[t._v("wei")]),t._v(", "),a("code",[t._v("gwei")]),t._v(" or "),a("code",[t._v("ether")]),t._v(" to specify a subdenomination of Ether, where Ether numbers without a postfix are assumed to be "),a("code",[t._v("wei")]),t._v(".")]),t._v(" "),a("p",[t._v("Similarly, in Solidity++, a literal number can take a suffix of "),a("code",[t._v("attov")]),t._v(" and "),a("code",[t._v("vite")]),t._v(" to specify a subdenomination of VITE, where VITE numbers without a postfix are assumed to be "),a("code",[t._v("attov")]),t._v(".")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"MSB2aXRlID0gMWUxOCBhdHRvdgo="}}),t._v(" "),a("h3",{attrs:{id:"magic-variables-and-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#magic-variables-and-functions"}},[t._v("#")]),t._v(" Magic Variables and Functions")]),t._v(" "),a("h4",{attrs:{id:"block-and-transaction-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#block-and-transaction-properties"}},[t._v("#")]),t._v(" Block and Transaction Properties")]),t._v(" "),a("p",[t._v("Below magic variables and functions has been removed from Solidity:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"dHguZ2FzcHJpY2U7CmJsb2NrLmNvaW5iYXNlOwpibG9jay5kaWZmaWN1bHR5OwpibG9jay5nYXNsaW1pdDsKYmxvY2toYXNoKHBhcmFtKTsKZ2FzbGVmdCgpOwptc2cuZ2FzOwpzZWxmZGVzdHJ1Y3QoX293bmVyKTsKc3VpY2lkZShfYWRkcik7Cg=="}}),t._v(" "),a("p",[t._v("Below magic variables and functions has been added in Solidity++:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ynl0ZXMzMiBiMSA9IGZyb21oYXNoKCk7CnVpbnQgaGVpZ2h0ID0gYWNjb3VudGhlaWdodCgpOwpieXRlczMyIGIyID0gcHJldmhhc2goKTsKdWludDY0IHJhbmRvbSA9IHJhbmRvbTY0KCk7CnVpbnQ2NCByYW5kb20gPSBuZXh0cmFuZG9tKCk7Cg=="}}),t._v(" "),a("ul",[a("li",[a("code",[t._v("fromhash()")]),t._v(" returns request transaction's hash")]),t._v(" "),a("li",[a("code",[t._v("accountheight()")]),t._v(" returns latest block height of an account")]),t._v(" "),a("li",[a("code",[t._v("prevhash()")]),t._v(" returns latest block hash of an account")]),t._v(" "),a("li",[a("code",[t._v("random64()")]),t._v(" returns a random number in "),a("code",[t._v("uint64")]),t._v(". This function will return the same random number in one transaction")]),t._v(" "),a("li",[a("code",[t._v("nextrandom()")]),t._v(" returns a random number in "),a("code",[t._v("uint64")]),t._v(". This function can be called multiple times to obtain different random numbers in one transaction")])]),t._v(" "),a("p",[t._v("Functions "),a("code",[t._v("address")]),t._v(" and "),a("code",[t._v("tokenId")]),t._v(" are redefined in Solidity++:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"dG9rZW5JZCB0b2tlbjAxID0gdG9rZW5JZCgmcXVvdDt0dGlfMjQ0NWY2ZTVjZGU4YzJjNzBlNDQ2YzgzJnF1b3Q7KTsKdG9rZW5JZCB0b2tlbjAyID0gJnF1b3Q7dHRpXzI0NDVmNmU1Y2RlOGMyYzcwZTQ0NmM4MyZxdW90OzsKYWRkcmVzcyBhZGRyMDEgPSBhZGRyZXNzKCZxdW90O3ZpdGVfMDEwMjAzMDQwNTA2MDcwODA5MDgwNzA2MDUwNDAzMDIwMTAyMDMwNGVkZGQ4Mzc0OGUmcXVvdDspOwphZGRyZXNzIGFkZHIwMiA9ICZxdW90O3ZpdGVfMDEwMjAzMDQwNTA2MDcwODA5MDgwNzA2MDUwNDAzMDIwMTAyMDMwNGVkZGQ4Mzc0OGUmcXVvdDs7Cg=="}}),t._v(" "),a("p",[t._v("Get transfer value in Solidity:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"bXNnLnZhbHVlCg=="}}),t._v(" "),a("p",[t._v("Get transfer value in Solidity++("),a("code",[t._v("value")]),t._v(" has been changed to "),a("code",[t._v("amount")]),t._v("):")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"bXNnLmFtb3VudDsK"}}),t._v(" "),a("p",[t._v("Get transfer token id(Solidity doesn't have the feature):")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"bXNnLnRva2VuaWQ7Cg=="}}),t._v(" "),a("h4",{attrs:{id:"members-of-address-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#members-of-address-types"}},[t._v("#")]),t._v(" Members of Address Types")]),t._v(" "),a("p",[t._v("Get account balance in Solidity:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"YWRkcmVzcy5iYWxhbmNlCg=="}}),t._v(" "),a("p",[t._v("Get account balance in Solidity++ where a parameter of tokenId is required:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"YWRkcmVzcy5iYWxhbmNlKF90b2tlbklkKQo="}}),t._v(" "),a("p",[t._v("In Solidity, send ETH to an address:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"YWRkcmVzcyhfYWRkcikudHJhbnNmZXIoX2Ftb3VudCk7Cg=="}}),t._v(" "),a("p",[t._v("In Solidity++, send some amount of a specific token to an address:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"YWRkcmVzcyhfYWRkcikudHJhbnNmZXIoX3Rva2VuSWQsIF9hbW91bnQpOwo="}}),t._v(" "),a("h4",{attrs:{id:"cryptographic-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cryptographic-functions"}},[t._v("#")]),t._v(" Cryptographic Functions")]),t._v(" "),a("p",[t._v("A hash function of "),a("code",[t._v("blake2b")]),t._v(" is introduced in Solidity++.")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"Ymxha2UyYihieXRlcyBtZW1vcnkpIHJldHVybnMgKGJ5dGVzMzIpCg=="}}),t._v(" "),a("ul",[a("li",[t._v("Compute the Blake2b hash of the input.")])]),t._v(" "),a("h2",{attrs:{id:"contribution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contribution"}},[t._v("#")]),t._v(" Contribution")]),t._v(" "),a("p",[t._v("The Solidity++ is open sourced "),a("a",{attrs:{href:"https://github.com/vitelabs/soliditypp",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("We welcome contributions from anyone interested, including reporting issues, fixing bus, commit new features and improving or translating the documentations.")])],1)}),[],!1,null,null,null);e.default=o.exports}}]);